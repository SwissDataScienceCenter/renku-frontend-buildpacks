#!/usr/bin/env bash
set -xeou pipefail

layer_dir="${CNB_LAYERS_DIR}/deps"
execd_dir="${layer_dir}"/exec.d
mkdir -p "${execd_dir}"

cat >"${execd_dir}"/setup.sh <<EOL
#!/usr/bin/env bash
set -eo pipefail
if [ -d \${RENKU_WORKING_DIR}/.venv ] && \
   ([ "\$(readlink \${RENKU_WORKING_DIR}/.venv/bin/python 2>/dev/null)" != "\$(which python 2>/dev/null)" ] || \
    [ "\$(grep "version = " \${RENKU_WORKING_DIR}/.venv/pyvenv.cfg 2>/dev/null | cut -d' ' -f3)" != "\$(python --version 2>/dev/null | cut -d' ' -f2)" ]); then
    echo "Virtualenv exists but has mismatch - recreating..."
    rm -rf \${RENKU_WORKING_DIR}/.venv
fi
python -m venv --system-site-packages \${RENKU_WORKING_DIR}/.venv
printf 'source \${RENKU_WORKING_DIR}/.venv/bin/activate' >>  \${HOME}/.bashrc
base_site_packages="\$(python -c 'import sysconfig; print(sysconfig.get_paths()["purelib"])')"
derived_site_packages="\$(\${RENKU_WORKING_DIR}/.venv/bin/python -c 'import sysconfig; print(sysconfig.get_paths()["purelib"])')"
echo "\$base_site_packages" > "\$derived_site_packages"/_base_packages.pth
source \${RENKU_WORKING_DIR}/.venv/bin/activate
if python -c "import ipykernel" >/dev/null 2>&1;then
  python -m ipykernel install --user --name Python3
fi
EOL

chmod +x "${execd_dir}"/setup.sh

cat >"${layer_dir}".toml <<EOL
[types]
launch = true

[metadata]
description = "set dependency management for run sessions"
version = "0.0.6"
EOL
